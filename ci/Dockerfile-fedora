# A use case to switch a module stream.
# The default is the use case from ruby:2.5 to ruby:2.6.
ARG BASE_IMAGE=fedora:30
FROM ${BASE_IMAGE}

# YUM repository file URL
ARG YUM_REPO_URL
# Module name
ARG MODULE_NAME=ruby
# Current stream
ARG CUR_STREAM=2.5
# New stream
ARG NEW_STREAM=2.6
# Module profile name.
# If the module does not have the default profile, you need to set.
ARG MODULE_PROFILE

ENV MODULE_NAME "${MODULE_NAME}"
ENV CUR_STREAM "${CUR_STREAM}"
ENV NEW_STREAM "${NEW_STREAM}"
ENV MODULE_PROFILE "${MODULE_PROFILE}"

# ====
# Step 0: Create the prerequisites

# Create a testing user.
RUN useradd -m tester
WORKDIR /work
COPY . .
RUN chown -R tester:tester /work

# Install YUM repository file if it exists.
RUN script/run-install-repo.sh

# Install current module.
RUN yum module list "${MODULE_NAME}"
RUN yum -y module reset "${MODULE_NAME}"
RUN yum module list "${MODULE_NAME}"
# Run yum moudle install considering an existance of the module profile.
RUN script/run-module-install.sh
RUN yum module list "${MODULE_NAME}"

# Install RPM packages or language packages (in case of ruby, gem packages)
# for testing.
# Some points to be tested.
# * RPM packages depending on current module stream,
#   but not depending on new module stream.
# * Language packages depending on current module stream,
#   but not depending on new module stream.

# Install dependencies by root user.
RUN script/run install-deps-root.sh

USER tester
# Install dependencies by regular user.
RUN script/run install-deps-user.sh

# ====
# Step 1: Run the following command to determine if your system is prepared
# for switching to a later stream
USER root

# The system is fully updated by following command.
RUN yum -y update
# Now run the same command again for debug.
RUN yum -y update
# By following command, it is checked that no packages installed on the system
# are newer than the packages available in the repository.
# The command must finish with the message "Nothing to do. Complete!"
RUN yum -y distro-sync
# Now run the same command again for debug.
RUN yum -y distro-sync

# ====
# Step 2: Change the active stream to the later one
RUN yum -y module reset "${MODULE_NAME}"
RUN yum module list "${MODULE_NAME}"
RUN yum -y module enable "${MODULE_NAME}:${NEW_STREAM}"
RUN yum module list "${MODULE_NAME}"

# ====
# Step 3: Synchronize installed packages to perform the change between streams
# "yum distro-sync" can be error without --allowerasing option.
RUN yum -y distro-sync || true
RUN yum -y --allowerasing distro-sync

RUN yum module list "${MODULE_NAME}"

# Prepare to test.
USER tester
RUN script/run prepare-to-test.sh

CMD script/run test.sh
